public partial class gl { 
    public partial class Functions { 
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, ConditionalRenderMode, void> glBeginConditionalRender;
        public static unsafe delegate* unmanaged[Cdecl]<PrimitiveType, void> glBeginTransformFeedback;
        public static unsafe delegate* unmanaged[Cdecl]<BufferTarget, GLuint, GLbuffer, void> glBindBufferBase;
        public static unsafe delegate* unmanaged[Cdecl]<BufferTarget, GLuint, GLbuffer, GLintptr, GLsizeiptr, void> glBindBufferRange;
        public static unsafe delegate* unmanaged[Cdecl]<GLprogram, GLuint, GLchar*, void> glBindFragDataLocation;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, GLframebuffer, void> glBindFramebuffer;
        public static unsafe delegate* unmanaged[Cdecl]<RenderbufferTarget, GLrenderbuffer, void> glBindRenderbuffer;
        public static unsafe delegate* unmanaged[Cdecl]<GLvertexarray, void> glBindVertexArray;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, ClearBufferMask, MagFilter, void> glBlitFramebuffer;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferStatus> glCheckFramebufferStatus;
        public static unsafe delegate* unmanaged[Cdecl]<ClampColorTarget, ClampColorMode, void> glClampColor;
        public static unsafe delegate* unmanaged[Cdecl]<Buffer, GLint, GLfloat, GLint, void> glClearBufferfi;
        public static unsafe delegate* unmanaged[Cdecl]<Buffer, GLint, GLfloat*, void> glClearBufferfv;
        public static unsafe delegate* unmanaged[Cdecl]<Buffer, GLint, GLint*, void> glClearBufferiv;
        public static unsafe delegate* unmanaged[Cdecl]<Buffer, GLint, GLuint*, void> glClearBufferuiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLboolean, GLboolean, GLboolean, GLboolean, void> glColorMaski;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLframebuffer*, void> glDeleteFramebuffers;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLrenderbuffer*, void> glDeleteRenderbuffers;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLvertexarray*, void> glDeleteVertexArrays;
        public static unsafe delegate* unmanaged[Cdecl]<GLCapability, GLuint, void> glDisablei;
        public static unsafe delegate* unmanaged[Cdecl]<GLCapability, GLuint, void> glEnablei;
        public static unsafe delegate* unmanaged[Cdecl]<void> glEndConditionalRender;
        public static unsafe delegate* unmanaged[Cdecl]<void> glEndTransformFeedback;
        public static unsafe delegate* unmanaged[Cdecl]<BufferTarget, GLintptr, GLsizeiptr, void> glFlushMappedBufferRange;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, RenderbufferTarget, GLrenderbuffer, void> glFramebufferRenderbuffer;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, TextureTarget, GLtexture, GLint, void> glFramebufferTexture1D;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, TextureTarget, GLtexture, GLint, void> glFramebufferTexture2D;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, TextureTarget, GLtexture, GLint, GLint, void> glFramebufferTexture3D;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, GLtexture, GLint, GLint, void> glFramebufferTextureLayer;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, void> glGenerateMipmap;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLframebuffer*, void> glGenFramebuffers;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLrenderbuffer*, void> glGenRenderbuffers;
        public static unsafe delegate* unmanaged[Cdecl]<GLsizei, GLvertexarray*, void> glGenVertexArrays;
        public static unsafe delegate* unmanaged[Cdecl]<BufferTarget, GLuint, GLboolean*, void> glGetBooleani_v;
        public static unsafe delegate* unmanaged[Cdecl]<GLprogram, GLchar*, GLint> glGetFragDataLocation;
        public static unsafe delegate* unmanaged[Cdecl]<FramebufferTarget, FramebufferAttachment, FramebufferAttachmentParameter, GLint*, void> glGetFramebufferAttachmentParameteriv;
        public static unsafe delegate* unmanaged[Cdecl]<GLParameter, GLuint, GLint*, void> glGetIntegeri_v;
        public static unsafe delegate* unmanaged[Cdecl]<RenderbufferTarget, RenderbufferParameter, GLint*, void> glGetRenderbufferParameteriv;
        public static unsafe delegate* unmanaged[Cdecl]<GLString, GLuint, GLubyte*> glGetStringi;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameter, GLint*, void> glGetTexParameterIiv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameter, GLuint*, void> glGetTexParameterIuiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLprogram, GLuint, GLsizei, GLsizei*, GLsizei*, AttributeType*, GLchar*, void> glGetTransformFeedbackVarying;
        public static unsafe delegate* unmanaged[Cdecl]<GLprogram, GLint, GLuint*, void> glGetUniformuiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, VertexAttribEnum, GLint*, void> glGetVertexAttribIiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, VertexAttribEnum, GLuint*, void> glGetVertexAttribIuiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLCapability, GLuint, GLboolean> glIsEnabledi;
        public static unsafe delegate* unmanaged[Cdecl]<GLframebuffer, GLboolean> glIsFramebuffer;
        public static unsafe delegate* unmanaged[Cdecl]<GLrenderbuffer, GLboolean> glIsRenderbuffer;
        public static unsafe delegate* unmanaged[Cdecl]<GLvertexarray, GLboolean> glIsVertexArray;
        public static unsafe delegate* unmanaged[Cdecl]<BufferTarget, GLintptr, GLsizeiptr, MapBufferAccessMask, void*> glMapBufferRange;
        public static unsafe delegate* unmanaged[Cdecl]<RenderbufferTarget, InternalFormat, GLsizei, GLsizei, void> glRenderbufferStorage;
        public static unsafe delegate* unmanaged[Cdecl]<RenderbufferTarget, GLsizei, InternalFormat, GLsizei, GLsizei, void> glRenderbufferStorageMultisample;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameter, GLint*, void> glTexParameterIiv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameter, GLuint*, void> glTexParameterIuiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLprogram, GLsizei, GLchar**, TransformFeedbackBufferMode, void> glTransformFeedbackVaryings;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLuint, void> glUniform1ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLsizei, GLuint*, void> glUniform1uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLuint, GLuint, void> glUniform2ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLsizei, GLuint*, void> glUniform2uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLuint, GLuint, GLuint, void> glUniform3ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLsizei, GLuint*, void> glUniform3uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLuint, GLuint, GLuint, GLuint, void> glUniform4ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLsizei, GLuint*, void> glUniform4uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint, void> glVertexAttribI1i;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint*, void> glVertexAttribI1iv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint, void> glVertexAttribI1ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint*, void> glVertexAttribI1uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint, GLint, void> glVertexAttribI2i;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint*, void> glVertexAttribI2iv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint, GLuint, void> glVertexAttribI2ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint*, void> glVertexAttribI2uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint, GLint, GLint, void> glVertexAttribI3i;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint*, void> glVertexAttribI3iv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint, GLuint, GLuint, void> glVertexAttribI3ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint*, void> glVertexAttribI3uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLbyte*, void> glVertexAttribI4bv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint, GLint, GLint, GLint, void> glVertexAttribI4i;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint*, void> glVertexAttribI4iv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLshort*, void> glVertexAttribI4sv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLubyte*, void> glVertexAttribI4ubv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint, GLuint, GLuint, GLuint, void> glVertexAttribI4ui;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLuint*, void> glVertexAttribI4uiv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLushort*, void> glVertexAttribI4usv;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, GLint, VertexAttribType, GLsizei, void*, void> glVertexAttribIPointer;
    }
}
