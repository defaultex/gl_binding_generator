public partial class gl { 
    public partial class Functions { 
        public static unsafe delegate* unmanaged[Cdecl]<BlendingFactor, BlendingFactor, void> glBlendFunc;
        public static unsafe delegate* unmanaged[Cdecl]<ClearBufferMask, void> glClear;
        public static unsafe delegate* unmanaged[Cdecl]<GLfloat, GLfloat, GLfloat, GLfloat, void> glClearColor;
        public static unsafe delegate* unmanaged[Cdecl]<GLdouble, void> glClearDepth;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, void> glClearStencil;
        public static unsafe delegate* unmanaged[Cdecl]<GLboolean, GLboolean, GLboolean, GLboolean, void> glColorMask;
        public static unsafe delegate* unmanaged[Cdecl]<CullFaceMode, void> glCullFace;
        public static unsafe delegate* unmanaged[Cdecl]<DepthFunction, void> glDepthFunc;
        public static unsafe delegate* unmanaged[Cdecl]<GLboolean, void> glDepthMask;
        public static unsafe delegate* unmanaged[Cdecl]<GLdouble, GLdouble, void> glDepthRange;
        public static unsafe delegate* unmanaged[Cdecl]<EnableCap, void> glDisable;
        public static unsafe delegate* unmanaged[Cdecl]<DrawBufferMode, void> glDrawBuffer;
        public static unsafe delegate* unmanaged[Cdecl]<EnableCap, void> glEnable;
        public static unsafe delegate* unmanaged[Cdecl]<void> glFinish;
        public static unsafe delegate* unmanaged[Cdecl]<void> glFlush;
        public static unsafe delegate* unmanaged[Cdecl]<FrontFaceDirection, void> glFrontFace;
        public static unsafe delegate* unmanaged[Cdecl]<GetPName, GLboolean*, void> glGetBooleanv;
        public static unsafe delegate* unmanaged[Cdecl]<GetPName, GLdouble*, void> glGetDoublev;
        public static unsafe delegate* unmanaged[Cdecl]<ErrorCode> glGetError;
        public static unsafe delegate* unmanaged[Cdecl]<GetPName, GLfloat*, void> glGetFloatv;
        public static unsafe delegate* unmanaged[Cdecl]<GetPName, GLint*, void> glGetIntegerv;
        public static unsafe delegate* unmanaged[Cdecl]<StringName, GLubyte*> glGetString;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GLint, PixelFormat, PixelType, void*, void> glGetTexImage;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GLint, GetTextureParameter, GLfloat*, void> glGetTexLevelParameterfv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GLint, GetTextureParameter, GLint*, void> glGetTexLevelParameteriv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GetTextureParameter, GLfloat*, void> glGetTexParameterfv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GetTextureParameter, GLint*, void> glGetTexParameteriv;
        public static unsafe delegate* unmanaged[Cdecl]<HintTarget, HintMode, void> glHint;
        public static unsafe delegate* unmanaged[Cdecl]<EnableCap, GLboolean> glIsEnabled;
        public static unsafe delegate* unmanaged[Cdecl]<GLfloat, void> glLineWidth;
        public static unsafe delegate* unmanaged[Cdecl]<LogicOp, void> glLogicOp;
        public static unsafe delegate* unmanaged[Cdecl]<PixelStoreParameter, GLfloat, void> glPixelStoref;
        public static unsafe delegate* unmanaged[Cdecl]<PixelStoreParameter, GLint, void> glPixelStorei;
        public static unsafe delegate* unmanaged[Cdecl]<GLfloat, void> glPointSize;
        public static unsafe delegate* unmanaged[Cdecl]<MaterialFace, PolygonMode, void> glPolygonMode;
        public static unsafe delegate* unmanaged[Cdecl]<ReadBufferMode, void> glReadBuffer;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLint, GLsizei, GLsizei, PixelFormat, PixelType, void*, void> glReadPixels;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLint, GLsizei, GLsizei, void> glScissor;
        public static unsafe delegate* unmanaged[Cdecl]<StencilFunction, GLint, GLuint, void> glStencilFunc;
        public static unsafe delegate* unmanaged[Cdecl]<GLuint, void> glStencilMask;
        public static unsafe delegate* unmanaged[Cdecl]<StencilOp, StencilOp, StencilOp, void> glStencilOp;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GLint, InternalFormat, GLsizei, GLint, PixelFormat, PixelType, void*, void> glTexImage1D;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, GLint, InternalFormat, GLsizei, GLsizei, GLint, PixelFormat, PixelType, void*, void> glTexImage2D;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameterName, GLfloat, void> glTexParameterf;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameterName, GLfloat*, void> glTexParameterfv;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameterName, GLint, void> glTexParameteri;
        public static unsafe delegate* unmanaged[Cdecl]<TextureTarget, TextureParameterName, GLint*, void> glTexParameteriv;
        public static unsafe delegate* unmanaged[Cdecl]<GLint, GLint, GLsizei, GLsizei, void> glViewport;
    }
}
